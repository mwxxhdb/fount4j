plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

test {
    useJUnitPlatform()
}

ext {
    set('springCloudVersion', '2020.0.3-SNAPSHOT')
    set('testContainersVersion', '1.15.3')
    set('hutoolVersion', '5.7.2')
}

subprojects {
    group 'com.fount4j'
    version '1.0.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = '11'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }
}

configure(subprojects.findAll { it.name.startsWith('common') }) {
    bootJar { enabled = false }
    jar { enabled = true }
}

configure(subprojects.findAll { it.name.startsWith('api') }) {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        implementation project(':common-core')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation project(':common-test')
    }
}

configure(subprojects.findAll { it -> it.name.startsWith('app') }) {
    dependencies {
        implementation project(':common-core')
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        testImplementation project(':common-test')
    }
}

project(':common-core') {
    dependencies {
        api 'org.springframework.boot:spring-boot-starter-web'
        api 'org.springframework.boot:spring-boot-starter-thymeleaf'
        api 'org.springframework.boot:spring-boot-starter-redis:1.4.7.RELEASE'
        api 'redis.clients:jedis:3.6.0'
        api 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
        api 'org.springframework.data:spring-data-redis:2.5.1'
        api 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.5.3'
        api 'cn.dev33:sa-token-spring-boot-starter:1.19.0'
        api "cn.hutool:hutool-setting:$hutoolVersion"

        testImplementation 'org.jsoup:jsoup:1.13.1'
        testImplementation project(':common-test')
    }
}

project(':common-test') {
    dependencies {
        api "org.testcontainers:testcontainers:$testContainersVersion"
        api "org.testcontainers:junit-jupiter:$testContainersVersion"
        api 'org.springframework.boot:spring-boot-starter-web'
        api 'org.springframework.boot:spring-boot-starter-test'
    }
}

project(':app-admin') {
    dependencies {
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'

        implementation 'org.liquibase:liquibase-core'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation "cn.hutool:hutool-core:$hutoolVersion"
        implementation "cn.hutool:hutool-crypto:$hutoolVersion"
    }
}