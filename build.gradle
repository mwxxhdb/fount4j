plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.4.5'
    id 'org.springframework.experimental.aot' version '0.9.2-SNAPSHOT'
}

repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url 'https://repo.spring.io/snapshot' }
    mavenCentral()
}

test {
    useJUnitPlatform()
}

subprojects {
    group 'com.fount4j'
    version '1.0.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = '11'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenLocal()
//        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://repo.spring.io/snapshot' }
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    }

    test {
        useJUnitPlatform()
    }
}

configure(subprojects.findAll { it.parent?.name?.equals('common') }) {
    bootJar { enabled = false }
    jar { enabled = true }
}

configure(subprojects.findAll { it.parent?.name?.equals('api') }) {
    bootJar { enabled = false }
    jar { enabled = true }
    dependencies {
        implementation project(':common:core')
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

configure(subprojects.findAll { it -> it.parent?.name?.equals('app') }) {
    apply plugin: 'org.springframework.experimental.aot'

    dependencies {
        implementation project(':common:core')
    }

    bootBuildImage {
        builder = 'paketobuildpacks/builder:tiny'
        environment = ['BP_NATIVE_IMAGE': 'true']
    }
}